var documenterSearchIndex = {"docs":
[{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"EditURL = \"https://github.com/JeffFessler/Sinograms.jl/blob/main/docs/lit/examples/docs/lit/examples/02-sino-geom.jl\"","category":"page"},{"location":"generated/examples/02-sino-geom/#sino-geom","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"","category":"section"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"This page describes the 2D sinogram geometries available in the Julia package Sinograms.jl.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"This page was generated from a single Julia file: 02-sino-geom.jl.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"In any such Julia documentation, you can access the source code using the \"Edit on GitHub\" link in the top right.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"The corresponding notebook can be viewed in nbviewer here: 02-sino-geom.ipynb, and opened in binder here: 02-sino-geom.ipynb.","category":"page"},{"location":"generated/examples/02-sino-geom/#Setup","page":"2D sinogram geometry","title":"Setup","text":"","category":"section"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"Packages needed here.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"using Unitful: mm, °\nusing UnitfulRecipes\nusing Plots # must precede 'using Sinograms' for sino_plot_rays to work\nusing Sinograms: SinoPar, SinoMoj, SinoFanArc, SinoFanFlat, SinoFan\nusing Sinograms: sino_plot_rays\nusing MIRTjim: jim, prompt\nusing InteractiveUtils: versioninfo","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"The following line is helpful when running this example.jl file as a script; this way it will prompt user to hit a key after each figure is displayed.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"isinteractive() ? jim(:prompt, true) : prompt(:draw);\nnothing #hide","category":"page"},{"location":"generated/examples/02-sino-geom/#D-Sinogram-geometries","page":"2D sinogram geometry","title":"2D Sinogram geometries","text":"","category":"section"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"To perform 2D image reconstruction from a 2D sinogram, one must first describe how the rays in the sinogram are sampled.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"Mathematically, the Radon transform p(rphi) of f(xy) is defined for all r and ϕ but practical systems record p(rϕ) only for certain finite sets of samples of those values.","category":"page"},{"location":"generated/examples/02-sino-geom/#Parallel-beam-geometry","page":"2D sinogram geometry","title":"Parallel-beam geometry","text":"","category":"section"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"The simplest form of sinogram sampling is equally spaced samples in both r and ϕ. This sampling is called a parallel-beam geometry. (Very few practical systems have this sampling pattern, but it is an easy place to start.) Both FBP and iterative reconstruction methods need to know which values of r and ϕ are sampled.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"In this package, SinoPar is the type that describes a parallel-beam sinogram geometry.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"The built-in defaults provide helpful reminders about the usage.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"SinoPar()","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"This package supports units via the Unitful.jl and using units is recommended (but not required).","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"Here is an example of how to specify a parallel-beam geometry. Everything is a named keyword argument with sensible default values.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"orbit and orbit_start must both be unitless (degrees) or have the same units (e.g., degrees or radians).\ndetector spacing d and strip_width must both be unitless or have the same units (e.g., mm).\nThe projection angles ϕ are equally space and given by orbit_start + (0:(nb-1))/nb * orbit.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"sg = SinoPar( ;\n    nb = 64, # number of radial samples (\"bins\")\n    na = 30, # number of angular samples\n    d = 2mm, # detector spacing\n    offset = 0.25, # quarter detector offset (unitless)\n    orbit = 180, # angular range (in degrees)\n    orbit_start = 0, # starting angle (in degrees)\n    strip_width = 2mm, # detector width\n)","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"The struct sg has numerous useful properties; type ?SinoGeom to see the full list.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"For example, to access the angular samples in degrees type sg.ad","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"sg.ad","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"The following function visualizes the sampling pattern.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"sino_plot_rays(sg; ylims=(0,180), yticks=(0:90:180), widen=true, title=\"Parallel\")","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"prompt()","category":"page"},{"location":"generated/examples/02-sino-geom/#Fan-beam-CT-with-an-arc-detector-(3rd-generation-CT)","page":"2D sinogram geometry","title":"Fan-beam CT with an arc detector (3rd generation CT)","text":"","category":"section"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"For a fan-beam geometry, the arguments are the same as for SinoPar with the addition of specifying:","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"dsd distance from source to detector\ndod distance from origin (isocenter) to detector\ndfs distance from focal point of detector to source (0 for a 3rd gen arc detector, and Inf for a flat detector)\nsource_offset for misaligned systems  where the ray from the source to the detector center  does not intersect the isocenter.  Not fully supported; submit an issue if you need this feature.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"Here is an example that corresponds to a GE Lightspeed CT system. These numbers are published in IEEE T-MI Oct. 2006, p.1272-1283.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"sg = SinoFanArc( ; nb=888, na=984,\n    d=1.0239mm, offset=1.25, dsd=949.075mm, dod=408.075mm)","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"Here is a smaller example for plotting the rays.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"sg = SinoFanArc( ; nb=64, na=30,\n    d=20mm, offset=0.25, dsd=900mm, dod=400mm)\nsino_plot_rays(sg; ylims=(-50,400), yticks=(0:180:360), widen=true,\n    title=\"Fan-beam for arc detector\")","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"prompt()","category":"page"},{"location":"generated/examples/02-sino-geom/#Fan-beam-CT-with-a-flat-detector","page":"2D sinogram geometry","title":"Fan-beam CT with a flat detector","text":"","category":"section"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"This geometry is the same as the arc detector except that dfs=Inf.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"sg = SinoFanFlat( ; nb=64, na=30,\n    d=20mm, offset=0.25, dsd=900mm, dod=400mm)","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"Here is its sampling plot","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"sino_plot_rays(sg; ylims=(-50,400), yticks=(0:180:360), widen=true,\n    title=\"Fan-beam for flat detector\")","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"prompt()","category":"page"},{"location":"generated/examples/02-sino-geom/#Mojette-sampling","page":"2D sinogram geometry","title":"Mojette sampling","text":"","category":"section"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"This is a specialized sampling geometry that is currently incompletely supported.","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"SinoMoj()","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"","category":"page"},{"location":"generated/examples/02-sino-geom/","page":"2D sinogram geometry","title":"2D sinogram geometry","text":"This page was generated using Literate.jl.","category":"page"},{"location":"methods/#Methods-list","page":"Methods","title":"Methods list","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"","category":"page"},{"location":"methods/#Methods-usage","page":"Methods","title":"Methods usage","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"Modules = [Sinograms]","category":"page"},{"location":"methods/#Sinograms.Sinograms","page":"Methods","title":"Sinograms.Sinograms","text":"Sinograms module\n\n\n\n\n\n","category":"module"},{"location":"methods/#Sinograms.SinoFan-Tuple{Val{:ge1}}","page":"Methods","title":"Sinograms.SinoFan","text":"SinoFan(Val(:ge1))\n\nSinogram geometry for GE lightspeed system. These numbers are published in IEEE T-MI Oct. 2006, p.1272-1283 wang:06:pwl.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.SinoFanArc","page":"Methods","title":"Sinograms.SinoFanArc","text":"SinoFanArc : 2D fan-beam sinogram geometry for arc detector\n\njulia> SinoFanArc()\nSinoFanArc{Float32, Float32} :\n nb::Int64 128\n na::Int64 200\n d::Float32 1.0\n orbit::Float32 360.0\n orbit_start::Float32 0.0\n offset::Float32 0.0\n strip_width::Float32 1.0\n source_offset::Float32 0.0\n dsd::Float32 512.0\n dod::Float32 128.0\n dfs::Float32 0.0\n\n\n\n\n\n","category":"type"},{"location":"methods/#Sinograms.SinoFanArc-Tuple{}","page":"Methods","title":"Sinograms.SinoFanArc","text":"SinoFanArc( ; nb, na, d=1, orbit=360, orbit_start=0, offset=0, strip_width=d,\n    source_offset = 0, dsd= 4 * nb * d, dod = nb * d, dfs = 0, down=0)\n\nConstructor with named keywords.\n\norbit and orbit_start must both be unitless (degrees) or have same units.\nd, strip_width, source_offset, dsd, dod, dfs must all be unitless or have the same units.\nnb::Int = 128 # of radial bins\nna::Int = 2 * floor(Int, nb * π/2 / 2) # of projection angles\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.SinoFanFlat","page":"Methods","title":"Sinograms.SinoFanFlat","text":"SinoFanFlat : 2D fan-beam sinogram geometry for flat detector\n\njulia> SinoFanFlat()\nSinoFanFlat{Float32, Float32} :\n nb::Int64 128\n na::Int64 200\n d::Float32 1.0\n orbit::Float32 360.0\n orbit_start::Float32 0.0\n offset::Float32 0.0\n strip_width::Float32 1.0\n source_offset::Float32 0.0\n dsd::Float32 512.0\n dod::Float32 128.0\n dfs::Float32 Inf\n\n\n\n\n\n","category":"type"},{"location":"methods/#Sinograms.SinoFanFlat-Tuple{}","page":"Methods","title":"Sinograms.SinoFanFlat","text":"SinoFanFlat( ; nb, na, d=1, orbit=360, orbit_start=0, offset=0, strip_width=d,\n    source_offset = 0, dsd= 4 * nb * d, dod = nb * d, dfs = Inf, down=0)\n\nConstructor with named keywords.\n\norbit and orbit_start must both be unitless (degrees) or have same units.\nd, strip_width, source_offset, dsd, dod, dfs must all be unitless or have the same units.\nnb::Int = 128 # of radial bins\nna::Int = 2 * floor(Int, nb * π/2 / 2) # of projection angles\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.SinoGeom","page":"Methods","title":"Sinograms.SinoGeom","text":"SinoGeom\n\nAbstract type for representing 2D sinogram ray geometries.\n\nBasic methods:\n\ndims (nb, na)\nsino_s [nb] s sample locations\nsino_w (nb-1)/2 + offset ('middle' sample position)\nrays (rgrid, ϕgrid) [nb na] parallel-beam coordinates\nones ones(Float32, nb, na)\nzeros zeros(Float32, nb, na)\ndownsample\noversample\nangles (na) in degrees\n\nDerived values (available by getproperty), i.e., sg.?\n\n.dim       dimensions: (nb,na)\n.ds|dr     radial sample spacing (NaN for :moj)\n.s         [nb] s sample locations\n.w         (nb-1)/2 + offset ('middle' sample position)\n.ad        source angles [degrees]\n.ar        source angles [radians]\n.ones      ones(Float32, nb,na)\n.zeros     zeros(Float32, nb,na)\n.rfov      radial fov\n.xds       [nb] center of detector elements (beta=0)\n.yds       [nb] ''\n.plot_grid(scatter)    plot sg.grid using Plots.scatter\n\nFor mojette:\n\n.d_ang       [na]\n\nFor fan beam:\n\n.gamma       [nb] gamma sample values [radians]\n.gamma_max   half of fan angle [radians]\n.dso         dsd - dod, Inf for parallel beam\ndsd dis_src_det distance from source to detector\ndso dis_src_iso distance from source to isocenter\ndod dis_iso_det distance from isocenter to detector\ndfs dis_foc_src distance from source to detector focal spot                   (0 for 3rd gen CT, Inf for flat detectors)\n\nMethods\n\n.down(down)     reduce sampling by integer factor\n.shape(sino)    reshape sinograms into array [nb na :]\n.unitv(;ib,ia)  unit 'vector' with single nonzero element\n.taufun(x,y)    projected s/ds for each (x,y) pair [numel(x) na]\n.plot!(plot!;ig)plot system geometry (mostly for SinoFan)\n\n\n\n\n\n","category":"type"},{"location":"methods/#Sinograms.SinoMoj","page":"Methods","title":"Sinograms.SinoMoj","text":"SinoMoj : 2D Mojette sinogram geometry\nwhere `d` means `dx` (square pixel size), and `strip_width` may be ignored.\n\njulia> SinoMoj()\nSinoMoj{Float32, Float32} :\n nb::Int64 128\n na::Int64 200\n d::Float32 1.0\n orbit::Float32 180.0\n orbit_start::Float32 0.0\n offset::Float32 0.0\n strip_width::Float32 1.0\n\n\n\n\n\n","category":"type"},{"location":"methods/#Sinograms.SinoMoj-Tuple{}","page":"Methods","title":"Sinograms.SinoMoj","text":"SinoMoj( ; nb, na, d=1, orbit=180, orbit_start=0, offset=0, strip_width=d, down=0)\n\nConstructor with named keywords.\n\norbit and orbit_start must both be unitless (degrees) or have same units.\nd and strip_width must both be unitless or have the same units.\nd means dx (square pixel size)\nstrip_width may be ignored (todo).\nnb::Int = 128 # of radial bins\nna::Int = 2 * floor(Int, nb * π/2 / 2) # of projection angles\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.SinoPar","page":"Methods","title":"Sinograms.SinoPar","text":"SinoPar : 2D parallel-beam sinogram geometry\n\njulia> SinoPar()\nSinoPar{Float32, Float32} :\n nb::Int64 128\n na::Int64 200\n d::Float32 1.0\n orbit::Float32 180.0\n orbit_start::Float32 0.0\n offset::Float32 0.0\n strip_width::Float32 1.0\n\n\n\n\n\n","category":"type"},{"location":"methods/#Sinograms.SinoPar-Tuple{}","page":"Methods","title":"Sinograms.SinoPar","text":"SinoPar( ; nb, na, d=1, orbit=180, orbit_start=0, offset=0, strip_width=d, down=0)\n\nConstructor with named keywords.\n\norbit and orbit_start must both be unitless (degrees) or have same units.\nd and strip_width must both be unitless or have the same units.\nnb::Int = 128 # of radial bins\nna::Int = 2 * floor(Int, nb * π/2 / 2) # of projection angles\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.Window","page":"Methods","title":"Sinograms.Window","text":"Window{S,T}\n\nData type for FBP apodizing windows.\n\n\n\n\n\n","category":"type"},{"location":"methods/#Sinograms.WindowVect","page":"Methods","title":"Sinograms.WindowVect","text":"WindowVect{V} <: AbstractWindowShape\n\nA user-specified window vector, constructed via WindowVect(v::V), where v is a AbstractVector. Caution: length(v) must be appropriate for the padded sinogram size.\n\n\n\n\n\n","category":"type"},{"location":"methods/#Base.show-Tuple{IO, MIME{Symbol(\"text/plain\")}, SinoGeom}","page":"Methods","title":"Base.show","text":"show(io::IO, ::MIME\"text/plain\", sg::SinoGeom)\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms._reale-Tuple{Any}","page":"Methods","title":"Sinograms._reale","text":"_reale(x ; rtol = …)\n\nReturn the real part of x, but warn if the imaginary part is too large. By default this uses a 100× larger rtol than isapprox due to FFT errors.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.downsample-Union{Tuple{S}, Tuple{S, Int64}} where S<:SinoParallel","page":"Methods","title":"Sinograms.downsample","text":"sg = downsample(sg, down)\n\nDown-sample sinogram geometry (for testing with small problems).\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp!-Tuple{AbstractMatrix{<:Number}, AbstractMatrix{<:Number}}","page":"Methods","title":"Sinograms.fbp!","text":"fbp!(image, sino ; orbit::Real = 180, kwargs...)\n\nFBP reconstruction from a parallel-beam sinogram of size [nr × nϕ]. Writes result into image matrix.\n\nInput\n\nsino::AbstractMatrix\n\nOptions for SinoPar constructor\n\ndr : sinogram radial spacing; default 1\norbit : angular range in degrees; default 180\norbit_start : angular range in degrees; default 0\n\nOptions for ImageGeom\n\ndx, dy, deltas, offset_x, offset_y, offsets\nrmax maximum radius for mask\n\nOptions\n\nkwargs : passed to plan_fbp\n\nOutput\n\nimage::AbstractMatrix is mutated\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp-Tuple{Sinograms.NormalPlan, AbstractMatrix{<:Number}}","page":"Methods","title":"Sinograms.fbp","text":"image, sino_filt = fbp(plan, sino)\n\nFiltered back-projection (FBP) reconstruction, returning image and filtered sinogram.\n\nin\n\nplan::FBPplan\nsino::AbstractMatrix{<:Number}\n\nout\n\nimage::Matrix{<:Number}       reconstructed image(s)\nsino_filt::Matrix{<:Number}   filtered sinogram(s)\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp-Union{Tuple{AbstractMatrix{Ts}}, Tuple{Ts}} where Ts<:Number","page":"Methods","title":"Sinograms.fbp","text":"fbp(sino::AbstractMatrix ; kwargs...)\n\nFBP reconstruction from a parallel-beam sinogram of size [nr × nϕ]. Returns an image of size [nx × ny].\n\nOptions\n\nnx : default nr\nny : default nx\nkwargs : passed to fbp!\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp_back","page":"Methods","title":"Sinograms.fbp_back","text":"img = fbp_back(sg, ig, sino ; ia_skip)\n\n2D pixel-driven backprojection for FBP.\n\nin\n\nsg::SinoGeom\nig::ImageGeom\nsino::AbstractArray{<:Number} sinogram(s) (line integrals), usually ramp filtered\n\noptions\n\nia_skip::Int downsample in angle to save time for quick tests (default: 1)\n\nout\n\nimg::Array{<:Number} reconstructed image(s)\n\n\n\n\n\n","category":"function"},{"location":"methods/#Sinograms.fbp_filter-Union{Tuple{}, Tuple{SinoGeom{Td}}, Tuple{Td}} where Td<:Number","page":"Methods","title":"Sinograms.fbp_filter","text":"Hk = fbp_filter(sg::SinoGeom ;\n    npad=0, ds::RealU = sg.d, decon1::Bool=true, window=Window())\n\nCompute frequency response of ramp-like filter used for 2D FBP image reconstruction. Both parallel-beam and fan-beam tomographic geometries are supported. This code samples the band-limited ramp to avoid the aliasing that would be caused by sampling the ramp directly in the frequency domain.\n\nin\n\nsg::SinoGeom\n\noptions\n\nnpad::Int # of padded samples. (default: next power of 2)\ndecon1::Bool deconvolve effect of linear interpolator? (default: true)\nwindow::Window apodizer; default: Window()\n\nout\n\nHk::Vector apodized ramp filter frequency response\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp_ramp-Union{Tuple{Td}, Tuple{SinoPar{Td}, Int64}} where Td","page":"Methods","title":"Sinograms.fbp_ramp","text":"h, n = fbp_ramp(sg::SinoGeom, N::Int)\n\n'ramp-like' filters for parallel-beam and fan-beam FBP reconstruction. This sampled band-limited approach avoids the aliasing that would be caused by sampling the ramp directly in the frequency domain.\n\nin\n\nsg::SinoGeom\nN::Int : # of samples (must be even)\n\nout\n\nh::Vector{<:RealU} : samples of band-limited ramp filter\nn::UnitRange{Int64} : -(N÷2):(N÷2-1)\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp_sino_filter-Union{Tuple{Tf}, Tuple{Ts}, Tuple{N}, Tuple{AbstractArray{Ts, N}, AbstractVector{Tf}}} where {N, Ts<:Number, Tf<:Number}","page":"Methods","title":"Sinograms.fbp_sino_filter","text":"sino = fbp_sino_filter(sg::SinoGeom, sino, filter ; extra=0)\n\nApply ramp-like filters to sinogram(s) for 2D FBP image reconstruction. Both parallel-beam and fan-beam tomographic geometries are supported. todo?\n\nin\n\nsg::SinoGeom\nsino::AbstractArray{<:Number} [nb (L)] sinograms\nfilter::AbstractVector (npad ≥ nb) apodized ramp filter frequency response\n\noptions\n\nextra::Int # of extra sinogram radial samples to keep (default: 0)\nnpad::Int # of padded samples. (default: next power of 2)\n\nout\n\nsino::AbstractArray sinogram with filtered rows\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp_sino_weight-Tuple{SinoFan}","page":"Methods","title":"Sinograms.fbp_sino_weight","text":"fbp_sino_weight(sg::SinoFan)\n\nReturn 1D sinogram weighting for first step of 2D fan-beam FBP.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp_window-Tuple{Window, Int64}","page":"Methods","title":"Sinograms.fbp_window","text":"fbp_window(w::Window, N::Int ; T = Float32)\n\nCreate an apodizing window of length N and fftshift it.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.oversample-Union{Tuple{S}, Tuple{S, Int64}} where S<:SinoParallel","page":"Methods","title":"Sinograms.oversample","text":"sg = oversample(sg, over::Int)\n\nOver-sample sinogram geometry in \"radial\" dimension. For Mojette sampling, it means that d = dx/over.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.parker_weight-Tuple{SinoPar}","page":"Methods","title":"Sinograms.parker_weight","text":"parker_weight(sg::SinoGeom ; T = Float32)\n\nCompute Parker weighting for non-360° orbits. Returns Vector{T} of length sg.na.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.plan_fbp","page":"Methods","title":"Sinograms.plan_fbp","text":"plan = plan_fbp(sg, ig; how=:normal, window=Window())\n\nPlan FBP 2D tomographic image reconstruction for parallel-beam & fan-beam cases, with either flat or arc detector for fan-beam case.\n\nTo use this, you first call it with the sinogram and image geometry. The routine returns the initialized \"plan\". Thereafter, to to perform FBP reconstruction, call fbp with the plan (perhaps numerous times for the same geometry).\n\nin\n\nsg::SinoGeom\nig::ImageGeom # only reconstruct pixels within ig.mask.\n\noptions\n\nhow::Symbol  how to reconstruct\n:normal  default\n:mojette use mojette rebinning and Gtomo2_table\nwindow::Window e.g. Window(Hamming(0.5)); default Window()\n\n= npad::Int # of radial bins after padding; default nextpow(2, sg.nb + 1) -T::DataType              type of sino elements (default: Float32)\n\nout\n\nplan::FBPplan            initialized plan\n\n\n\n\n\n","category":"function"},{"location":"methods/#Sinograms.rays-Union{Tuple{SinoPar{Td, To}}, Tuple{To}, Tuple{Td}} where {Td, To}","page":"Methods","title":"Sinograms.rays","text":"(r, ϕ) = rays(sg::SinoGeom)\n\nRadial r and angular ϕ coordinates (in radians) of all sinogram elements for the given geometry.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.reshaper-Tuple{AbstractArray, Tuple{Vararg{Int64, N}} where N}","page":"Methods","title":"Sinograms.reshaper","text":"reshaper(x::AbstractArray, dim:Dims)\n\nReshape x to size dim with : only if needed\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.sino_geom_gamma-Union{Tuple{SinoFanArc{Td}}, Tuple{Td}} where Td","page":"Methods","title":"Sinograms.sino_geom_gamma","text":"sino_geom_gamma(sg::SinoFan)\n\nReturn gamma (fan angle) values for fan-beam geometry\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.sino_geom_rfov-Tuple{SinoPar}","page":"Methods","title":"Sinograms.sino_geom_rfov","text":"sino_geom_rfov(sg::SinoGeom)\n\nRadial FOV.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.sino_geom_taufun-Union{Tuple{Ty}, Tuple{Tx}, Tuple{To}, Tuple{Td}, Tuple{SinoGeom{Td, To}, AbstractArray{Tx}, AbstractArray{Ty}}} where {Td<:Number, To<:Number, Tx<:Number, Ty<:Number}","page":"Methods","title":"Sinograms.sino_geom_taufun","text":"sino_geom_taufun(sg::SinoGeom, x, y)\n\nProjected s/ds, useful for footprint center and support. Returns Matrix of size length(x) × sg.na.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.sino_geom_unitv-Tuple{DataType, SinoGeom}","page":"Methods","title":"Sinograms.sino_geom_unitv","text":"sino_geom_unitv([T=Float32], sg:SinoGeom ; ib::Int, ia::Int)\n\nSinogram with a single ray\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.sino_geom_xds-Tuple{SinoPar}","page":"Methods","title":"Sinograms.sino_geom_xds","text":"sino_geom_xds(sg::SinoGeom)\n\nCenter x positions of detectors (for beta = 0).\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.sino_geom_yds-Union{Tuple{SinoPar{Td}}, Tuple{Td}} where Td","page":"Methods","title":"Sinograms.sino_geom_yds","text":"sino_geom_yds(sg::SinoGeom)\n\nCenter y positions of detectors (for beta = 0).\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.sino_plot_rays-Tuple{SinoGeom}","page":"Methods","title":"Sinograms.sino_plot_rays","text":"sino_plot_rays(sg::SinoGeom ; kwargs...)\n\nMake a scatter plot of the (r, ϕ) sample locations for all rays. Requires Plots.\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.zwart_powell-Tuple{Real, Real}","page":"Methods","title":"Sinograms.zwart_powell","text":"output = zwart_powell(r, ϕ)\n\nAnalytic 2D Radon transform value of Zwart-Powell box spline, for radial distance r (normalized by pixel size) and angle ϕ (in radians).\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Sinograms","category":"page"},{"location":"#Sinograms.jl-Documentation","page":"Home","title":"Sinograms.jl Documentation","text":"","category":"section"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Sinograms.jl is a Julia language package with tools for tomographic image reconstruction, including","category":"page"},{"location":"","page":"Home","title":"Home","text":"describing ray geometries (parallel beam, fan beam, etc.) ✅\nperforming filtered back-projection (FBP) image reconstruction ✅\nsystem models for iterative reconstruction (WIP)","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the examples.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See also:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Michigan Image Reconstruction Toolbox (MIRT)\nJuliaImageRecon","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"EditURL = \"https://github.com/JeffFessler/Sinograms.jl/blob/main/docs/lit/examples/docs/lit/examples/01-tomography.jl\"","category":"page"},{"location":"generated/examples/01-tomography/#tomography","page":"Tomography","title":"Tomography","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"This page gives an overview of the Julia package Sinograms.jl.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"This page was generated from a single Julia file: 01-tomography.jl.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"In any such Julia documentation, you can access the source code using the \"Edit on GitHub\" link in the top right.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The corresponding notebook can be viewed in nbviewer here: 01-tomography.ipynb, and opened in binder here: 01-tomography.ipynb.","category":"page"},{"location":"generated/examples/01-tomography/#Setup","page":"Tomography","title":"Setup","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Packages needed here.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"using Sinograms: fbp\nusing MIRTjim: jim, prompt\nusing InteractiveUtils: versioninfo","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The following line is helpful when running this example.jl file as a script; this way it will prompt user to hit a key after each figure is displayed.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"isinteractive() ? jim(:prompt, true) : prompt(:draw);\nnothing #hide","category":"page"},{"location":"generated/examples/01-tomography/#Tomography","page":"Tomography","title":"Tomography","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Tomography is the process of imaging cross sections of an object without actually slicing the object. There are many forms of tomography; the description here focuses on X-ray computed tomography (CT scans). (See SPECTrecon.jl for a Julia package related to SPECT imaging.)","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"In an X-ray CT imaging system, X-rays emitted from an X-ray source are transmitted through an object (e.g., a patient in medical CT) towards a detector array. The source and detector rotate rapidly around the object. The signal intensities recorded by the detector are related to the sizes and densities of the object materials between the source and each detector element.","category":"page"},{"location":"generated/examples/01-tomography/#Radon-transform","page":"Tomography","title":"Radon transform","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The mathematical foundation for 2D X-ray CT imaging is the Radon transform, an integral transform that maps a 2D function f(xy) into the collection of line integrals through that function. Here we describe each line by its angle phi measured counter-clockwise from the y axis, and by the radial distance r of the line from the origin. The collection of integrals is called a sinogram.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Mathematically, the Radon transform p(rphi) of f(xy) is defined by","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"p(rphi) = int_-infty^infty\nf(r cos phi - l sin phi\nr sin phi + l cos phi)  mathrmd l","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The Radon transform of the object that is 1 inside the unit disk and 0 elsewhere is given by","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"p_1(rphi) = 2 sqrt1 - r^2  mathrm for   r  1","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"By the Radon transform's translation and scaling properties, the Radon transform of a disk of radius r_0 centered at (x_0y_0) is given by","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"p(rphi) = r_0  p_1\nleft( fracr - (x_0 cos phi + y_0 sin phi)r_0 ϕ right)","category":"page"},{"location":"generated/examples/01-tomography/#Sinogram-example","page":"Tomography","title":"Sinogram example","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Here is a display of that Radon transform for a disk of radius 3 centered at coordinate (51). Note that maximum value is approximately 6, the length of the longest chord through a disk of radius 3.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"nr = 128\ndr = 20 / nr\nr = ((-(nr-1)/2):((nr-1)/2)) * dr # radial sample locations\nna = 130\nϕ = (0:(na-1))/na * π # angular samples\nproj1 = r -> abs(r) < 1 ? 2 * sqrt(1 - r^2) : 0.\nproj2 = (r, ϕ, x, y, r0) -> r0 * proj1(r/r0 - (x * cos(ϕ) + y * sin(ϕ))/r0)\nsino = proj2.(r, ϕ', 5, 1, 3)\njimsino = (sino, title) -> jim(\n    r, ϕ, sino; title, aspect_ratio=:none,\n    xlabel = \"r\", ylabel = \"ϕ\", ylims=(0,π), yticks=([0, π], [\"0\", \"π\"]),\n    yflip=false, xticks = [-10, 0, 2, 5, 8, 10],\n    clim = (0, 6),\n)\njimsino(sino, \"Sinogram for one disk\")","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"As this figure illustrates, the Radon transform of a unit disk has a somewhat sinusoidal shape. Indeed every point in the (xy) plane traces out a distinct sinusoid in the sinogram.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The mapping from the object f(xy) to data like the sinogram p(rphi) is called the \"forward problem.\"","category":"page"},{"location":"generated/examples/01-tomography/#Image-reconstruction","page":"Tomography","title":"Image reconstruction","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Image reconstruction is the process of solving the inverse problem of recovering an estimate hatf(xy) of the object f(xy) from a measured sinogram, i.e., from (usually noisy) samples of p(rphi).","category":"page"},{"location":"generated/examples/01-tomography/#FBP","page":"Tomography","title":"FBP","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"A simple image reconstruction method is called the \"filtered back-projection\" (FBP) approach. It works by filtering each row of the sinogram with a filter, called the ramp filter, whose frequency response is roughly nu, where nu is the spatial frequency variable (units cycles / m), followed by a back-projection step that is the adjoint of the Radon transform.","category":"page"},{"location":"generated/examples/01-tomography/#FBP-example","page":"Tomography","title":"FBP example","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Here is an illustration of using the fbp method in this package to perform image reconstruction from the preceding sinogram.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"image = fbp(sino; dr)\n(nx,ny) = size(image)\ndx = dr # default\nx = ((-(nx-1)/2):((nx-1)/2)) * dr\ny = x\njim(x, y, image, \"FBP image\",\n    xtick=[-10, 0, 2, 5, 8, 10],\n    ytick=[-10, 0, -2, 1, 4, 10],\n)","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The FBP reconstructed image looks pretty similar to a disk of radius 3 centered at (51) as expected. However, there are quite a few ripples; these are aliasing artifacts due to the finite sampling in r and phi.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"This is example is what is called 2D parallel-beam tomography, because for the angles phi are equally spaced and for each angle the radial samples r are also equally spaced. This package includes FBP reconstruction methods for several other sinogram geometries, including the well-known fan beam geometries and the specialized Mojette geometry.","category":"page"},{"location":"generated/examples/01-tomography/#Noise-effects-on-FBP","page":"Tomography","title":"Noise effects on FBP","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Simulating the effects of measurement noise in sinogram leads to even worse FBP results.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"First note that a practical imaging system has a finite field of view (FOV):","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"rmax = maximum(r)\nfovmask = @. sqrt(abs2(x) + abs2(y)') ≤ rmax\njim(x, y, fovmask, \"FOV mask\")","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Add noise to the original sinogram:","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"noisy_sinogram = sino + 0.1 * randn(size(sino))\njimsino(noisy_sinogram, \"Noisy sinogram\")","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Apply FBP to the noisy sinogram:","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"noisy_fbp_image = fbp(noisy_sinogram; dr)\nnoisy_fbp_image .*= fovmask # apply FOV mask\njim(x, y, noisy_fbp_image, \"Noisy FBP image\"; clim=(0,1))","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The methods in this package (WIP) and related methods in the JuliaImageRecon suite are designed to provide better reconstructions than the simple FBP method. In particular, model-based image reconstruction (MBIR) methods and methods that use suitable machine-learning approaches can improve image quality significantly. See this 2020 survey paper.","category":"page"},{"location":"generated/examples/01-tomography/#Reproducibility","page":"Tomography","title":"Reproducibility","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"This page was generated with the following version of Julia:","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"io = IOBuffer(); versioninfo(io); split(String(take!(io)), '\\n')","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"And with the following package versions","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"import Pkg; Pkg.status()","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"This page was generated using Literate.jl.","category":"page"}]
}
